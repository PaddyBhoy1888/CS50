Source code > compiler > machine code

We write in sorce code, the complier converts the source into machine code ( 0 & 1's) that the machine can read

We want code to write that will be correct, i.e. code correctness

Design is subjective, the better design your code is written can run faster and easier to understand.

The style of your code can be helpful for humans to read & understand.

Syntax highlighting is part of text editors tha will highlight specific components of the syntax to help identify parts.

$ make hello - This command will compile the code to binary
$ ./hello - This will run the programe 

Escape sequence are when we add a line so the prompt symbol is clearly defined on new line e.g. "\n" for the new line

#include <stdio.h> - This is a header file that declairs a file exists i.e. "printf". This is a type of library that informs the compiler that we wish to use this as part of our function.

Data types - Strings, integers, char, bool etc. 

#Conditionals#

$ code <insert file name>.c #is a short cut way to make a file in C language.

In C language we need to define what the variable is i.e if it is a int, string, bool etc e.g. 'int x'

The command 'Ctrl+K+C' is used to comment out code.
The command 'Ctrl+K+U' is used to comment in code.

Make sure to add libraries at the start of each new code file. 

int main(void) has not been discussed but will always be at the start of the code at the moment. 

When dealing with single characters using char then 'single' quoyes should be used

When creating a character code we can use upper and lower case, instead or repeating lines after lines of the same code we can use and or type statement and in c '||' the two vertical bars can be used to represent the 'OR'

#VARIABLES#

Only when you create a variable do you need to define it i.e. string, char, bool etc, when we add to a variable we do not need to do this. 

There are different ways we can write adding to a variable or subtracting e.g. 'counter++' Adds 1 'counter--;' subtracts 1

LOOPS

There are a few ways to create loops that count up or down. 

E.G.
int i = 1;
while (i <= 3)
{
    printf("Meow\n");
    i++;
}

settin 1 = 1 & then while loop to stop when the i counter is greater than or equal to 3

For loops is an alternative to a loop but does the same thing effectively 

for (int i = 0; i < 3; i++)
    {
        printf("Meow\n");
    }

The first part is executed once (int = 0) sets the bar effectively as a point to start from, the for loop then cycles through the second and third. i.e. is ) less than 3? YES? increment 1 & printf statement, is 1 now less than 3? YES? increment 1 & printf statement, is 2 now less than 3?YES? increment 1 & printf statement. is 3 now less than 3? NO. loops STOPS 

Forever block i.e. do the follow forever. 
A programme loops forever could be checking for inputs or checking time or etc

E.G.
int main(void)
    {
        while(true)
        {
            printf("Meow\n")
        }
    }

Where we state that a boolen is true. The trus is a statement that needs to be included in a package.
The computer defaults to a true and as such would always be true a loop forever.

OPERATING SYSTEMS or UI's 

Alternative to window or Mac OS, both have terminals but Linux is more favourable for server based tasks

PROBLEM sets

Mario.c 

The problem starts with how could we could something that would resemble the typical 4x? you would see in the old 2D game. 

An example could be: - 
#include <stdio.h>

int main(void)
{
    printf("????\n");
}

This would code to show the ???? but is very basic. 

We can make this more concise with a for loop. 

Lets Start using the code space to start adding notes to avoid duplication of information and save time. Only key notes of course now provided. 

CALCULATOR

As the computer is restricted with the amount of RAM it has access to cacluating large numbers like 2,000,000,000 + 2,000,000,000 can return an error like negative number. Given most computers use 32 bits it has a maximum represented number of 
4,294,967,295 which is all 32 bits as a 1.
But it should also be lnown that as we need to represent negative numbers that half of the avalible numbers should be allocated to the negative side. This means that in actual fact the higest positive number will be: +2,147,483,647 & -2,147,483,647. 

Integer overflow is where the computer runs out of bits to use than what is avaliable. 

Longs are a concept in C where longer numbers can be represented, so rather than calling an 'int' a 'long' can be called. This allows the compurter to use 64 bits rather than the 32 bits and thus has access to more variable of values. 

Truncation

Where we have values with decimal points we can lose the values after the decimal points or 'truncate' them. This can happen when division is used. When two integers are divide it should return a fraction with a floating point value with a decimal points. This identifies that we can not use 'int' or 'long' in the code to get decimal points alone. So a float value can be added to store the decimal values, but this alone is not enough is the value can also be lost i.e. 'Truncated' so another method needs to be also used i.e. type casting. 


Type Casting 

Is the method of converting one data type to another. This can be done by specifying that an integer is a float value and C program can then understand that it is dividing a float by a float value and retain the decimal values.

Floating-Point Imprecision

Just as a large integers can not be used, the computer has limits i.e. bits or RAM that can result in imprecision of decimal points as the computer will have limits. 

A 'double' is like a float except it has the addion of allowing the program access to 64 bits instead of 32 that a float has access to. The double works the same way as float by storing the floating point values.




